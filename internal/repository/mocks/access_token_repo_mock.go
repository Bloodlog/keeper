// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/access_token_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	entity "keeper/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v5 "github.com/jackc/pgx/v5"
)

// MockAccessTokenRepository is a mock of AccessTokenRepository interface.
type MockAccessTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccessTokenRepositoryMockRecorder
}

// MockAccessTokenRepositoryMockRecorder is the mock recorder for MockAccessTokenRepository.
type MockAccessTokenRepositoryMockRecorder struct {
	mock *MockAccessTokenRepository
}

// NewMockAccessTokenRepository creates a new mock instance.
func NewMockAccessTokenRepository(ctrl *gomock.Controller) *MockAccessTokenRepository {
	mock := &MockAccessTokenRepository{ctrl: ctrl}
	mock.recorder = &MockAccessTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessTokenRepository) EXPECT() *MockAccessTokenRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAccessTokenRepository) Create(ctx context.Context, tx v5.Tx, token *entity.AccessToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, tx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAccessTokenRepositoryMockRecorder) Create(ctx, tx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAccessTokenRepository)(nil).Create), ctx, tx, token)
}

// FindValidByUserID mocks base method.
func (m *MockAccessTokenRepository) FindValidByUserID(ctx context.Context, tx v5.Tx, userID int64) (entity.AccessToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindValidByUserID", ctx, tx, userID)
	ret0, _ := ret[0].(entity.AccessToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindValidByUserID indicates an expected call of FindValidByUserID.
func (mr *MockAccessTokenRepositoryMockRecorder) FindValidByUserID(ctx, tx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindValidByUserID", reflect.TypeOf((*MockAccessTokenRepository)(nil).FindValidByUserID), ctx, tx, userID)
}
