// Code generated by MockGen. DO NOT EDIT.
// Source: keeper/internal/proto/v1 (interfaces: DataServiceClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	model "keeper/internal/proto/v1/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockDataServiceClient is a mock of DataServiceClient interface.
type MockDataServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockDataServiceClientMockRecorder
}

// MockDataServiceClientMockRecorder is the mock recorder for MockDataServiceClient.
type MockDataServiceClientMockRecorder struct {
	mock *MockDataServiceClient
}

// NewMockDataServiceClient creates a new mock instance.
func NewMockDataServiceClient(ctrl *gomock.Controller) *MockDataServiceClient {
	mock := &MockDataServiceClient{ctrl: ctrl}
	mock.recorder = &MockDataServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataServiceClient) EXPECT() *MockDataServiceClientMockRecorder {
	return m.recorder
}

// DeleteMetadata mocks base method.
func (m *MockDataServiceClient) DeleteMetadata(arg0 context.Context, arg1 *model.DeleteSecretRequest, arg2 ...grpc.CallOption) (*model.DeleteSecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteMetadata", varargs...)
	ret0, _ := ret[0].(*model.DeleteSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteMetadata indicates an expected call of DeleteMetadata.
func (mr *MockDataServiceClientMockRecorder) DeleteMetadata(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMetadata", reflect.TypeOf((*MockDataServiceClient)(nil).DeleteMetadata), varargs...)
}

// DeleteSecret mocks base method.
func (m *MockDataServiceClient) DeleteSecret(arg0 context.Context, arg1 *model.DeleteSecretRequest, arg2 ...grpc.CallOption) (*model.DeleteSecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteSecret", varargs...)
	ret0, _ := ret[0].(*model.DeleteSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSecret indicates an expected call of DeleteSecret.
func (mr *MockDataServiceClientMockRecorder) DeleteSecret(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecret", reflect.TypeOf((*MockDataServiceClient)(nil).DeleteSecret), varargs...)
}

// DestroySecret mocks base method.
func (m *MockDataServiceClient) DestroySecret(arg0 context.Context, arg1 *model.DeleteSecretRequest, arg2 ...grpc.CallOption) (*model.DeleteSecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DestroySecret", varargs...)
	ret0, _ := ret[0].(*model.DeleteSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DestroySecret indicates an expected call of DestroySecret.
func (mr *MockDataServiceClientMockRecorder) DestroySecret(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroySecret", reflect.TypeOf((*MockDataServiceClient)(nil).DestroySecret), varargs...)
}

// GetSecret mocks base method.
func (m *MockDataServiceClient) GetSecret(arg0 context.Context, arg1 *model.GetSecretRequest, arg2 ...grpc.CallOption) (*model.SecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetSecret", varargs...)
	ret0, _ := ret[0].(*model.SecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecret indicates an expected call of GetSecret.
func (mr *MockDataServiceClientMockRecorder) GetSecret(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockDataServiceClient)(nil).GetSecret), varargs...)
}

// ListSecrets mocks base method.
func (m *MockDataServiceClient) ListSecrets(arg0 context.Context, arg1 *model.ListSecretPathsRequest, arg2 ...grpc.CallOption) (*model.ListSecretPathsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListSecrets", varargs...)
	ret0, _ := ret[0].(*model.ListSecretPathsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSecrets indicates an expected call of ListSecrets.
func (mr *MockDataServiceClientMockRecorder) ListSecrets(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecrets", reflect.TypeOf((*MockDataServiceClient)(nil).ListSecrets), varargs...)
}

// SaveSecret mocks base method.
func (m *MockDataServiceClient) SaveSecret(arg0 context.Context, arg1 *model.WriteSecret, arg2 ...grpc.CallOption) (*model.SaveSecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SaveSecret", varargs...)
	ret0, _ := ret[0].(*model.SaveSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveSecret indicates an expected call of SaveSecret.
func (mr *MockDataServiceClientMockRecorder) SaveSecret(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSecret", reflect.TypeOf((*MockDataServiceClient)(nil).SaveSecret), varargs...)
}

// UndeleteSecret mocks base method.
func (m *MockDataServiceClient) UndeleteSecret(arg0 context.Context, arg1 *model.UndeleteSecretRequest, arg2 ...grpc.CallOption) (*model.DeleteSecretResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UndeleteSecret", varargs...)
	ret0, _ := ret[0].(*model.DeleteSecretResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UndeleteSecret indicates an expected call of UndeleteSecret.
func (mr *MockDataServiceClientMockRecorder) UndeleteSecret(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UndeleteSecret", reflect.TypeOf((*MockDataServiceClient)(nil).UndeleteSecret), varargs...)
}
